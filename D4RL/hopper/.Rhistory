m=lm(c(r)~cbind(x,x^2,a,a^2))
par=coef(m)
q=cbind(a,a^2);q[,(1:dima)]=0;q[,-(1:dima)]=2/3
r0=cbind(1,x,x^2,q)%*%par*(1/2)^dima
r=r0+c(w)*(r-fitted(m))
# clipping
r[r>10*max(R)]=max(R)
r[r<0.1*min(R)]=min(R)
r=matrix(r,nrow = n)
res[,i]=r[,1]
}
TW1[z]=(mean(res)-v)^2
TW2[z]=crossprod(rowMeans(res)-vi)/n
TW3[z]=crossprod(colMeans(res)-vt)/t0
TW4[z]=sum((res-vit)^2)/(n*t0)
}
print(paste('hopper-', name,sep=''))
print(round(c(mean(TW1),mean(TW2),mean(TW3),mean(TW4)),2))
}
library(truncnorm)
task=c('medium', 'expert','mixed','medium_expert')
for (name in task) {
TW1=TW2=TW3=TW4=c()
for (z in 1:20) {
load(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/",name,z,'.RData',sep = ''))
n=20;t=20;t0=5
MC <- read.csv(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/D4RL_MC/hopper/hopper_",name,'_MC.csv',sep = ''))
MC=MC$reward/500
vit=matrix(MC,nrow = 40)
vit=vit[1:n,]
vi=rowMeans(vit)
vt=colMeans(vit)[(1:t0)]
v=mean(vit)
vit=vit[,(1:t0)]
dima=dim(data[[2]][[1]])[1]
dimx=dim(data[[1]][[1]])[1]
a=do.call(rbind,data[[2]]);a=c(a)
a=matrix(a,  nrow = dima); a=t(a)
x=do.call(rbind,data[[1]]);x=c(x)
x=matrix(x,  nrow = dimx); x=t(x)
r=do.call(rbind,data[[3]]);r=c(r)
X=x;A=a;R=r
par=c()
ws=1
pi=(1/2)^dima
par=c()
weights=matrix(NA,nrow = n, ncol = t)
wsmatrix=matrix(NA,nrow = n, ncol = t)
w=1
for (h in 1:t) {
ps=1
x=X[((h-1)*n+1): (h*n),]
a=A[((h-1)*n+1): (h*n),]
for (l in 1:dima) {
m=lm(a[,l]~x)
sig=sd(m$residuals)
ps=ps*dtruncnorm(a[,l],a=-1,b=1,mean=fitted(m),sd=sig)
}
w=pi/ps
weights[,h]=w
m=lm(w~x)
wsmatrix[,h]=fitted(m)
}
## trimming
weights[weights>10]=10
wsmatrix[wsmatrix>10]=10
wsmatrix[wsmatrix<0]=0
omega=weights*wsmatrix
omega[omega>10]=10
## outcome learning
x=X;a=A
m=lm(c(r)~cbind(x,x^2,a,a^2))
par=coef(m)
q=cbind(a,a^2);q[,(1:dima)]=0;q[,-(1:dima)]=2/3
res=matrix(nrow=n,ncol=t0)
r0=cbind(1,x,x^2,q)%*%par* (1/2)^dima
res=matrix(nrow=n,ncol=t0)
r=c(r0)+c(omega)*(c(r)-fitted(m))
## clipping
r[r>10*max(R)]=max(R)
r[r<0.1*min(R)]=min(R)
r=matrix(r,nrow = n)
res[,1]=r[,1]
for (i in (2:t0)) {
x=X[(1:((t-i+1)*n)),];a=A[(1:((t-i+1)*n)),];r=c(r[,-1])
wsmatrix=wsmatrix[,-ncol(wsmatrix)]
weights=weights[,-1]
m=lm(c(wsmatrix*weights)~x)
wsmatrix=matrix(fitted(m),nrow = n)
wsmatrix[wsmatrix>10]=10
m=lm(c(r)~cbind(x,x^2,a,a^2))
par=coef(m)
q=cbind(a,a^2);q[,(1:dima)]=0;q[,-(1:dima)]=2/3
r0=cbind(1,x,x^2,q)%*%par*(1/2)^dima
omega=wsmatrix*weights
omega[omega>10]=10
r=c(r0)+c(omega)*(r-fitted(m))
## clipping
r[r>10*max(R)]=max(R)
r[r<0.1*min(R)]=min(R)
r=matrix(r,nrow = n)
res[,i]=r[,1]
}
TW1[z]=(mean(res)-v)^2
TW2[z]=crossprod(rowMeans(res)-vi)/n
TW3[z]=crossprod(colMeans(res)-vt)/t0
TW4[z]=sum((res-vit)^2)/(n*t0)
}
print(paste('hopper-', name,sep=''))
print(round(c(mean(TW1),mean(TW2),mean(TW3),mean(TW4)),2))
}
library(truncnorm)
task=c('medium', 'expert','mixed','medium_expert')
for (name in task) {
TW1=TW2=TW3=TW4=c()
for (z in 1:20) {
load(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/",name,z,'.RData',sep = ''))
n=20;t=20;t0=5
MC <- read.csv(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/D4RL_MC/hopper/hopper_",name,'_MC.csv',sep = ''))
MC=MC$reward/500
vit=matrix(MC,nrow = 40)
vit=vit[1:n,]
vi=rowMeans(vit)
vt=colMeans(vit)[(1:t0)]
v=mean(vit)
vit=vit[,(1:t0)]
gam=0.9
dima=dim(data[[2]][[1]])[1]
dimx=dim(data[[1]][[1]])[1]
a=do.call(rbind,data[[2]]);a=c(a)
a=matrix(a,  nrow = dima); a=t(a)
x=do.call(rbind,data[[1]]);x=c(x)
x=matrix(x,  nrow = dimx); x=t(x)
X=x;A=a
r=do.call(rbind,data[[3]]);r=c(r)
r=r[(1:((t-1)*n))]
x=X[(n+1):(t*n),];xprev=X[(1:((t-1)*n)),]
a=A[(1:((t-1)*n)),]
x=cbind(x,x^2)
xprev=cbind(xprev,xprev^2)
qq=matrix(0,nrow = (t-1)*n,ncol = 2*dima)
qq[,-(1:dima)]=(1/2)^dima* 2/3
Dpi=cbind(x*(1/2)^dima,qq); D=cbind(xprev,a,a^2)
PP=t(D)%*%(D)-gam*t(D)%*%Dpi
beta=(1-gam)*solve(PP)%*%t(Dpi)%*%r
omega=D%*%beta
omega=omega[1:(n*(t-1))]
## Q-function
x=x[,-1]
xprev=xprev[,-1]
D=cbind(1,-x*(1/2)^dima+xprev,a,-2/3* (1/2)^dima+a^2)
par=solve(t(D)%*%D)%*%t(D)%*%r
beta=par[-1]
par=mean(omega*(r+D[,-1]%*%beta))
TW1[z]=(par-v)^2
TW2[z]=crossprod(par-vi)/n
TW3[z]=crossprod(par-vt)/t0
TW4[z]=sum((par-vit)^2)/(n*t0)
}
print(paste('hopper-', name,sep=''))
print(round(c(mean(TW1),mean(TW2),mean(TW3),mean(TW4)),2))
}
name='medium'
z=1
load(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/",name,z,'.RData',sep = ''))
n=20;t=20;t0=5
MC <- read.csv(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/D4RL_MC/hopper/hopper_",name,'_MC.csv',sep = ''))
MC=MC$reward/500
vit=matrix(MC,nrow = 40)
vit=vit[1:n,]
vi=rowMeans(vit)
vt=colMeans(vit)[(1:t0)]
v=mean(vit)
vit=vit[,(1:t0)]
dima=dim(data[[2]][[1]])[1]
dimx=dim(data[[1]][[1]])[1]
a=do.call(rbind,data[[2]]);a=c(a)
a=matrix(a,  nrow = dima); a=t(a)
View(a)
name='medium'
load(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/",name,z,'.RData',sep = ''))
z=1
load(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/",name,z,'.RData',sep = ''))
n=20;t=20;t0=5
MC <- read.csv(paste("~/Desktop/JASA_Sims/D4RL/D4RL_Data/D4RL_MC/hopper/hopper_",name,'_MC.csv',sep = ''))
MC=MC$reward/500
vit=matrix(MC,nrow = 40)
vit=vit[1:n,]
vi=rowMeans(vit)
vt=colMeans(vit)[(1:t0)]
v=mean(vit)
vit=vit[,(1:t0)]
dima=dim(data[[2]][[1]])[1]
dimx=dim(data[[1]][[1]])[1]
View(data)
a=do.call(rbind,data[[2]])
View(a)
a=c(a)
a=matrix(a,  nrow = dima)
View(a)
a=t(a)
View(a)
a=do.call(rbind,data[[2]])
a=c(a)
a=matrix(a,  nrow = dima)
View(a)
data[[2]]
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_random.hdf5")
library(rhdf5)
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_random.hdf5")
term=walker$terminals
n=10;t=20;nn=20
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=walker$actions
X=walker$observations
R=walker$rewards
a=x=r=list()
index=ind
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_expert.hdf5")
term=walker$terminals
n=10;t=20;nn=20
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=walker$actions
X=walker$observations
R=walker$rewards
a=x=r=list()
index=ind
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker/noisy',j,'.RData',sep = ''))
}
View(data)
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_random.hdf5")
term=walker$terminals
n=10;t=20;nn=20
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=walker$actions
X=walker$observations
R=walker$rewards
a=x=r=list()
index=ind
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_expert.hdf5")
term=walker$terminals
n=10;t=20;nn=20
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=walker$actions
X=walker$observations
R=walker$rewards
index=ind
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker/noisy',j,'.RData',sep = ''))
}
View(data)
### noisy
library(rhdf5)
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_random.hdf5")
term=walker$terminals
n=10;t=20;nn=20
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=walker$actions
X=walker$observations
R=walker$rewards
a=x=r=list()
index=ind
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
walker = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker2d_expert.hdf5")
term=walker$terminals
n=10;t=20;nn=20
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=walker$actions
X=walker$observations
R=walker$rewards
index=ind
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i+n)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/walker/noisy',j,'.RData',sep = ''))
}
library(rhdf5)
halfcheetah = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/halfcheetah_random.hdf5")
term=halfcheetah$terminals
n=10;t=20;nn=20
gap=100;ind=which(term==T)
ind=seq(from=1,to=(n*nn-1)*gap+1,by=gap)
A=halfcheetah$actions
X=halfcheetah$observations
R=halfcheetah$rewards
a=x=r=list()
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
halfcheetah = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/halfcheetah_expert.hdf5")
term=halfcheetah$terminals
n=10;t=20;nn=20
gap=100;ind=which(term==T)
ind=seq(from=1,to=(n*nn-1)*gap+1,by=gap)
A=halfcheetah$actions
X=halfcheetah$observations
R=halfcheetah$rewards
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i+n)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/halfcheetah/noisy',j,'.RData',sep = ''))
}
### noisy
n=10;t=20;nn=20
library(rhdf5)
hopper = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper_random.hdf5")
term=hopper$terminals
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=hopper$actions
X=hopper$observations
R=hopper$rewards
a=x=r=list()
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
hopper = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper_expert.hdf5")
term=hopper$terminals
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=hopper$actions
X=hopper$observations
R=hopper$rewards
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i+n)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/noisy',j,'.RData',sep = ''))
}
n=10;t=20;nn=20
library(rhdf5)
hopper = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper_random.hdf5")
term=hopper$terminals
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=hopper$actions
X=hopper$observations
R=hopper$rewards
a=x=r=list()
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
hopper = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper_expert.hdf5")
term=hopper$terminals
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=hopper$actions
X=hopper$observations
R=hopper$rewards
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i+n)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/noisy',j,'.RData',sep = ''))
}
sub
n=10;t=20;nn=20
library(rhdf5)
hopper = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper_random.hdf5")
term=hopper$terminals
ind=which(term==T)
ind=ind[1:(n*nn-1)]
ind=ind+1
ind=c(1,ind)
A=hopper$actions
X=hopper$observations
R=hopper$rewards
a=x=r=list()
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i]]=A[,sub:(sub+t-1)]
x[[i]]=X[,sub:(sub+t-1)]
r[[i]]=R[sub:(sub+t-1)]+sin(i)+cos(1:t)
}
}
hopper = H5Fopen("/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper_expert.hdf5")
term=hopper$terminals
gap=100;ind=which(term==T)
ind=seq(from=1,to=(n*nn-1)*gap+1,by=gap)
A=hopper$actions
X=hopper$observations
R=hopper$rewards
a=x=r=list()
for (j in 1:nn) {
index=ind[((j-1)*n):((j)*n)]
for (i in 1:n) {
sub=index[i]
a[[i+n]]=A[,sub:(sub+t-1)]
x[[i+n]]=X[,sub:(sub+t-1)]
r[[i+n]]=R[sub:(sub+t-1)]+sin(i+n)+cos(1:t)
}
data=list(x,a,r)
save(data,file=paste(
'/Users/zeyubian/Desktop/JASA_Sims/D4RL/D4RL_Data/hopper/noisy',j,'.RData',sep = ''))
}
