for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[ll]=model
}
sum(res=='additive')/ll
library(dfms)
source("~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R")
res=c()
for (ll in 1:20){
n=t=20
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[ll]=model
}
sum(res=='additive')/ll
library(dfms)
source("~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R")
res=c()
for (ll in 1:20){
n=t=20
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[ll]=model
}
sum(res=='additive')/ll
library(dfms)
### the first four are alternatives; while the last three are null
setting=c("~/Desktop/JASA_Sims/Sensitivity/Setting 1/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 2/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 3/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 4/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 2/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 3/mixdata.R")
nn=100
n=20;t=20
res=matrix(nrow=length(setting),ncol=nn)
l=ceiling(log(t))
for (uu in 1:length(setting)) {
source(setting[uu])
for (j in 1:nn) {
n=t=20
set.seed(j)
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[uu,j]=model
}
j
da
5
s
-2
dsaf
name <- function(variables) {
}
q
library(dfms)
### the first four are alternatives; while the last three are null
setting=c("~/Desktop/JASA_Sims/Sensitivity/Setting 1/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 2/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 3/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 4/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 2/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 3/mixdata.R")
nn=100
n=20;t=20
res=matrix(nrow=length(setting),ncol=nn)
l=ceiling(log(t))
for (uu in 1:length(setting)) {
source(setting[uu])
for (j in 1:nn) {
n=t=20
set.seed(j)
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[uu,j]=model
}
}
library(dfms)
### the first four are alternatives; while the last three are null
setting=c("~/Desktop/JASA_Sims/Sensitivity/Setting 1/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 2/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 3/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 4/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 2/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 3/mixdata.R")
nn=100
n=20;t=20
res=matrix(nrow=length(setting),ncol=nn)
l=ceiling(log(t))
for (uu in 1:length(setting)) {
source(setting[uu])
for (j in 1:nn) {
n=t=20
set.seed(j)
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[uu,j]=model
}
}
View(res)
colMeans(res)
colMeans(res=='additive')
rowMeans(res=='additive')
library(dfms)
### the first four are alternatives; while the last three are null
setting=c("~/Desktop/JASA_Sims/Sensitivity/Setting 1/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 2/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 3/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 4/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 2/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 3/mixdata.R")
nn=100
n=20;t=20
res=matrix(nrow=length(setting),ncol=nn)
l=ceiling(log(t))
for (uu in 1:length(setting)) {
source(setting[uu])
for (j in 1:nn) {
n=t=20
set.seed(j)
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[uu,j]=model
}
}
rowMeans(res=='additive')
1-rowMeans(res=='additive')
library(dfms)
### the first four are alternatives; while the last three are null
setting=c("~/Desktop/JASA_Sims/Sensitivity/Setting 1/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 2/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 3/mixdata.R",
"~/Desktop/JASA_Sims/Sensitivity/Setting 4/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 1/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 2/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 3/mixdata.R",
"~/Desktop/JASA_Sims/Mixture/Scenario 4/mixdata.R")
nn=100
n=20;t=20
res=matrix(nrow=length(setting),ncol=nn)
l=ceiling(log(t))
for (uu in 1:length(setting)) {
source(setting[uu])
for (j in 1:nn) {
n=t=20
set.seed(j)
data=mix_data(n,t)
l=floor(log(t))
pi1=.8;pi0=1-pi1
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
A=do.call(cbind,data[[3]])
x=c(X)-rep(rowMeans(X),t)-rep(colMeans(X),each=n)+mean(X)
a=c(A)-rep(rowMeans(A),t)-rep(colMeans(A),each=n)+mean(A)
r=c(R)-rep(rowMeans(R),t)-rep(colMeans(R),each=n)+mean(R)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
}else{
for (z in 2:l) {
t=t-1
r=pi1*cbind(1,x,1)%*%coef(m0)+pi0*cbind(1,x,0)%*%coef(m0)
r=matrix(r,nrow=n)
r=r[,-1]
x=matrix(x,nrow = n)
x=x[,-t]
a=matrix(a,nrow = n)
a=a[,-t]
r=c(r);x=c(x);a=c(a)
m0=lm(r~x+a)
error=matrix(m0$residuals,nrow = n)
K=3
IC=rep(0,K+1)
IC[1]=log(crossprod(m0$residuals)/(n*t))
for (k in 1:K) {
m=DFM(error,k)
sig=sum(residuals(m)^2)/(n*t)
IC[k+1]=log(sig)+k*(n+t)/(n*t) * log(n*t/(n+t))
}
if((which.min(IC)-1)>0){
model='interactive'
break
} else{
model='additive'
}
}
}
res[uu,j]=model
}
}
1-rowMeans(res=='additive')
rowMeans(res=='additive')
