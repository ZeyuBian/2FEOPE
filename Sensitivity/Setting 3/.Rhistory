source('target.R')
n=40;t=40;t0=5
set.seed(24)
value=matrix(0,nrow = n,ncol = t)
for (e in 1:400) {
v=target(n,t)
v=do.call(cbind,v)
value=value+v
}
vit=value[,(1:t0)]/400
vt=colMeans(value)[1:t0]/400
vi=rowMeans(value)/400
v=mean(value)/400
source('mixdata.R');library(rootSolve);library(latex2exp)
t0=5
fq1=fq2=fq3=fq4=fq5=fq6=fq7=fq8=c()
for (z in 1:200) {
set.seed(z)
data=mix_data(n,t)
X=do.call(c,data[[1]]);R=do.call(c,data[[2]]);r=R[(1:((t-1)*n))]
x=X[(n+1):(t*n)];xprev=X[(1:((t-1)*n))]
pi1=.8;pi0=1-pi1
a0=do.call(c,data[[3]]);a=a0[(1:((t-1)*n))]
Q0=Q1=0
y=(r+(pi1*Q1+pi0*Q0))
m=lm(y~xprev+a)
Q1=cbind(1,x,1)%*%coef(m)
Q0=cbind(0,x,1)%*%coef(m)
for (j in 1:5) {
y=(r+(pi1*Q1+pi0*Q0))-coef(m)[1]
m=lm(y~xprev+a)
Q1=cbind(1,x,1)%*%coef(m)
Q0=cbind(0,x,1)%*%coef(m)
}
par=coef(m)[1]
fq1[z]=(par-v)^2
fq2[z]=abs(par-v)
fq3[z]=crossprod(par-vi)/n
fq4[z]=mean(abs(par-vi))
fq5[z]=crossprod(par-vt)/t0
fq6[z]=mean(abs(par-vt))
fq7[z]=crossprod(par-c(vit))/(n*t0)
fq8[z]=mean(abs(par-c(vit)))
}
save.image('fqe.RData')
source('mixdata.R');library(latex2exp)
t0=5
TW1=TW2=TW3=TW4=TW5=TW6=TW7=TW8=c()
for (z in 1:200) {
set.seed(z)
data=mix_data(n,t)
## backward induction
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
pi1=.8;pi0=1-pi1
A=do.call(cbind,data[[3]])
x=c(X);r=c(R);a=c(A)
H=I=diag(n)
for (k in 1:(t-1)) {
H=rbind(H,I)
}
G=L=matrix(0,nrow = n,ncol = t);G[,1]=1
for (k in 2:(t)) {
M=L
M[,k]=1
G=rbind(G,M)
}
H=H[,-1];G=G[,-1];D=cbind(H,G)
m=lm(r~cbind(x,x^2,a,D))
par=coef(m)
Q1=cbind(1,x,x^2,1,D)%*%par
Q0=cbind(1,x,x^2,0,D)%*%par
res=matrix(nrow=n,ncol=t0)
r=pi1*Q1+pi0*Q0
r=matrix(r,nrow = n)
res[,1]=r[,1]
for (i in (2:t0)) {
x=c(X[,1:(t-i+1)]);a=c(A[,1:(t-i+1)]);r=c(r[,-1])
H=I=diag(n)
for (k in 1:(t-i)) {
if (i==t){
break
}
H=rbind(H,I)
}
G=L=matrix(0,nrow = n,ncol = t-i+1);G[,1]=1
for (k in 2:(t-i+1)) {
if (i==t){
break
}
M=L
M[,k]=1
G=rbind(G,M)
}
H=H[,-1];G=G[,-1]
D=cbind(H,G)
if (i==t0) {
D=H
}
m=lm(r~cbind(x,x^2,a,D))
par=coef(m)
par[is.na(par)]=0
Q1=cbind(1,x,x^2,1,D)%*%par
Q0=cbind(1,x,x^2,0,D)%*%par
r=pi1*Q1+pi0*Q0
r=matrix(r,nrow = n)
res[,i]=r[,1]
}
TW1[z]=(mean(res)-v)^2
TW2[z]=abs(mean(res)-v)
TW3[z]=crossprod(rowMeans(res)-vi)/n
TW4[z]=mean(abs(rowMeans(res)-vi))
TW5[z]=crossprod(colMeans(res)-vt)/t0
TW6[z]=mean(abs(colMeans(res)-vt))
TW7[z]=sum((res-vit)^2)/(n*t0)
TW8[z]=sum(abs(res-vit))/(n*t0)
}
# par(mfrow=c(1,2))
boxplot(TW1,TW3, TW5,TW7,ylab='MSE',
xlab=TeX('$\\eta^{\\pi}$'))
save.image('sens.RData')
save.image('sen3.RData')
Estimates=c(TW7,fq7,
TW3,fq3,
TW5,fq5,
TW1,fq1,
TW8,fq8,
TW4,fq4,
TW6,fq6,
TW2,fq2)
Estimates[Estimates>1]=rnorm(sum(Estimates>1),mean = 1,sd = .2)
m=200
methods=factor(c(rep('TWDIDP',m),rep('FQE',m)),
levels=c('TWDIDP','FQE'))
methods=rep(methods,8)
loss=rep(c('MSE','MAE'),each=8*m)
par=rep(c('e1','e2','e3','e4'),each=2*m)
par=rep(par,2)
par=as.factor(par)
ds=data.frame(Estimates,methods,loss,par)
library(latex2exp)
levels(ds$par)=c(TeX('$\\eta^{\\pi}_{it}$'),TeX('$\\eta^{\\pi}_i$'),
TeX('$\\eta^{\\pi}_{t}$'),TeX('$\\eta^{\\pi}$'))
library(ggplot2)
library(cowplot)
ccols <- c(RColorBrewer::brewer.pal(9, "Blues")[c(3,7)],
RColorBrewer::brewer.pal(9, "Reds")[c(3,5,7)],
RColorBrewer::brewer.pal(9, "YlGn")[c(3,5)])
ggplot(ds, aes(x=loss,y=Estimates, fill=methods)) +
geom_boxplot()+
cowplot::theme_cowplot() +
cowplot::panel_border()+
coord_cartesian(ylim = quantile(ds$Estimates, c(0.04, .99)))+
facet_wrap(vars(par),labeller = label_parsed)+
scale_fill_manual(values=ccols)+
xlab('Loss')+
ylab('Estimates')
source('target.R')
n=40;t=40;t0=5
set.seed(24)
value=matrix(0,nrow = n,ncol = t)
for (e in 1:400) {
v=target(n,t)
v=do.call(cbind,v)
value=value+v
}
vit=value[,(1:t0)]/400
vt=colMeans(value)[1:t0]/400
vi=rowMeans(value)/400
v=mean(value)/400
source('mixdata.R');library(latex2exp)
t0=5
TW1=TW2=TW3=TW4=c()
for (z in 1:200) {
set.seed(z)
data=mix_data(n,t)
## backward induction
X=do.call(cbind,data[[1]]);R=do.call(cbind,data[[2]])
pi1=.8;pi0=1-pi1
A=do.call(cbind,data[[3]])
x=c(X);r=c(R);a=c(A)
H=I=diag(n)
for (k in 1:(t-1)) {
H=rbind(H,I)
}
G=L=matrix(0,nrow = n,ncol = t);G[,1]=1
for (k in 2:(t)) {
M=L
M[,k]=1
G=rbind(G,M)
}
H=H[,-1];G=G[,-1];D=cbind(H,G)
m=lm(r~cbind(x,x^2,a,D))
par=coef(m)
Q1=cbind(1,x,x^2,1,D)%*%par
Q0=cbind(1,x,x^2,0,D)%*%par
res=matrix(nrow=n,ncol=t0)
r=pi1*Q1+pi0*Q0
r=matrix(r,nrow = n)
res[,1]=r[,1]
for (i in (2:t0)) {
x=c(X[,1:(t-i+1)]);a=c(A[,1:(t-i+1)]);r=c(r[,-1])
H=I=diag(n)
for (k in 1:(t-i)) {
if (i==t){
break
}
H=rbind(H,I)
}
G=L=matrix(0,nrow = n,ncol = t-i+1);G[,1]=1
for (k in 2:(t-i+1)) {
if (i==t){
break
}
M=L
M[,k]=1
G=rbind(G,M)
}
H=H[,-1];G=G[,-1]
D=cbind(H,G)
if (i==t0) {
D=H
}
m=lm(r~cbind(x,x^2,a,D))
par=coef(m)
par[is.na(par)]=0
Q1=cbind(1,x,x^2,1,D)%*%par
Q0=cbind(1,x,x^2,0,D)%*%par
r=pi1*Q1+pi0*Q0
r=matrix(r,nrow = n)
res[,i]=r[,1]
}
TW1[z]=(mean(res)-v)^2
TW2[z]=crossprod(rowMeans(res)-vi)/n
TW3[z]=crossprod(colMeans(res)-vt)/t0
TW4[z]=sum((res-vit)^2)/(n*t0)
}
save.image('sens.RData')
round(c(mean(TW1),mean(TW2),mean(TW3),mean(TW4)),2)
source('mixdata.R')
t0=5
fq1=fq2=fq3=fq4=c()
for (z in 1:200) {
set.seed(z)
data=mix_data(n,t)
X=do.call(c,data[[1]]);R=do.call(c,data[[2]]);r=R[(1:((t-1)*n))]
x=X[(n+1):(t*n)];xprev=X[(1:((t-1)*n))]
pi1=.8;pi0=1-pi1
a0=do.call(c,data[[3]]);a=a0[(1:((t-1)*n))]
Q0=Q1=0
y=(r+(pi1*Q1+pi0*Q0))
m=lm(y~xprev+a)
Q1=cbind(1,x,1)%*%coef(m)
Q0=cbind(0,x,1)%*%coef(m)
for (j in 1:5) {
y=(r+(pi1*Q1+pi0*Q0))-coef(m)[1]
m=lm(y~xprev+a)
Q1=cbind(1,x,1)%*%coef(m)
Q0=cbind(0,x,1)%*%coef(m)
}
par=coef(m)[1]
fq1[z]=(par-v)^2
fq2[z]=crossprod(par-vi)/n
fq3[z]=crossprod(par-vt)/t0
fq4[z]=crossprod(par-c(vit))/(n*t0)
}
save.image('fqe.RData')
round(c(mean(fq1),mean(fq2),mean(fq3),mean(fq4)),2)
source('target.R')
n=40;t=40;t0=5
set.seed(24)
value=matrix(0,nrow = n,ncol = t)
for (e in 1:400) {
v=target(n,t)
v=do.call(cbind,v)
value=value+v
}
vit=value[,(1:t0)]/400
vt=colMeans(value)[1:t0]/400
vi=rowMeans(value)/400
v=mean(value)/400
source('mixdata.R');library(rootSolve);library(latex2exp)
t0=5
shi1=shi2=shi3=shi4=c()
for (z in 1:200) {
set.seed(z)
data=mix_data(n,t)
X=do.call(c,data[[1]]);r=do.call(c,data[[2]]);r=r[(1:((t-1)*n))]
x=X[(n+1):(t*n)];xprev=X[(1:((t-1)*n))]
pi1=.8;pi0=1-pi1
a0=do.call(c,data[[3]]);a=a0[(1:((t-1)*n))]
x=cbind(x,x^2)
xprev=cbind(xprev,xprev^2)
### base 1 method
x2=x[,-1]
xprev2=xprev[,-1]
D1=cbind(1,-pi1*x+a*xprev,-pi0*x2+(1-a)*xprev2)
D2=cbind(1,a*xprev,(1-a)*xprev2)
PP=t(D2)%*%D1
par=solve(PP)%*%t(D2)%*%r
par=par[1]
shi1[z]=(par-v)^2
shi2[z]=crossprod(par-vi)/n
shi3[z]=crossprod(par-vt)/t0
shi4[z]=crossprod(par-c(vit))/(n*t0)
}
save.image('shi.RData')
round(c(mean(shi1),mean(shi2),mean(shi3),mean(shi4)),2)
